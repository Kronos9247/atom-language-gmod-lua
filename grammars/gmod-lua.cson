####################################################################################################
    # Garry's Mod Lua grammar
    # Copyright (C) 2014 Lixquid
    #
    # This program is free software: you can redistribute it and/or modify
    # it under the terms of the GNU General Public License as published by
    # the Free Software Foundation, either version 3 of the License, or
    # (at your option) any later version.
    #
    # This program is distributed in the hope that it will be useful,
    # but WITHOUT ANY WARRANTY; without even the implied warranty of
    # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    # GNU General Public License for more details.
####################################################################################################

name: "Garry's Mod Lua"
comment: "Garry's Mod Lua: version 0.1.0"
scopeName: "source.lua"

fileTypes: [ "lua" ]
firstLineMatch: """ #heregex
        \\A \\#! .*? \\b lua \\b                    # Match if we find a bash directive
    """.replace( /(?:[^\\])#.*/g, "" ).replace( "\\#", "#" ).replace( /\s/g, "" )

patterns: [

    ## Constants ###################################################################################

    {   # Numbers
        name: "constant.numeric.lua"

        match: """ #heregex

                \\b (
                    0x [\\d a-f]+                   # Hex Number
                |
                    \\d+                            # Integer Number
                    ( [eE] -? \\d+ )?               # With optional Exponent
                |
                    \\d* \\. \\d+                   # Decimal Number
                    ( [eE] -? \\d+ )?               # With optional Exponent
                )

            """.replace( /(?:[^\\])#.*/g, "" ).replace( "\\#", "#" ).replace( /\s/g, "" )
    }

    {   # Values
        name: "constant.language.lua"

        match: """ #heregex

                \\b (
                    nil | true | false | _G | _VERSION
                    | math \\. ( pi | huge )
                ) \\b
            |
                \\.{3}

            """.replace( /(?:[^\\])#.*/g, "" ).replace( "\\#", "#" ).replace( /\s/g, "" )
    }

    ## Strings #####################################################################################

    {   # Single-quoted strings
        name: "string.quoted.single.lua"

        begin: "'"
        end: "'"

        patterns: [
            name: "constant.character.escape.lua"
            match: "\\\\."
        ]
    }

    {   # Double-quoted strings
        name: "string.quoted.double.lua"

        begin: "\""
        end: "\""

        patterns: [
            name: "constant.character.escape.lua"
            match: "\\\\."
        ]
    }

    {   # Multi-line strings
        name: "string.quoted.other.multiline.lua"

        begin: """ #heregex
                (?<! -- )                           # Check this is isn't a multi-line comment..
                \\[ ( =* ) \\[                      # Look for the starting braces
            """.replace( /(?:[^\\])#.*/g, "" ).replace( "\\#", "#" ).replace( /\s/g, "" )
        end: "\\]\\1\\]"
    }

]
